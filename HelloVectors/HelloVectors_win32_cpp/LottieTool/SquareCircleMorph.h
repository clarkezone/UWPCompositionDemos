#pragma once
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using namespace winrt;
using namespace Windows::UI::Composition;
using namespace Windows::Foundation::Numerics;

#include "ICompositionSource.h"

//from this interface:
//https://github.com/Microsoft/microsoft-ui-xaml/blob/4bc19189a8b752bebab375ef950aa1a546891ae5/dev/AnimatedVisualPlayer/AnimatedVisualPlayer.idl
//[webhosthidden]
//interface IAnimatedVisual   requires Windows.Foundation.IClosable{ Windows.UI.Composition.Visual RootVisual{ get; };  
//Windows.Foundation.Numerics.Vector2 Size{ get; };  
//Windows.Foundation.TimeSpan Duration{ get; }; };

namespace Microsoft::UI::Xaml::Controls {
	struct IAnimatedVisual {
		//
		//virtual Windows::Foundation::TimeSpan get_Duration() {}
		virtual Visual GetVisual() {}
		virtual float2 GetSize() {}
	};
}

namespace AnimatedVisuals
{
	class SquareCircleMorph  //sealed : public ICompositionSource
	{
	public:
		com_ptr<Microsoft::UI::Xaml::Controls::IAnimatedVisual> TryCreateAnimatedVisual(
			Compositor const& compositor,
			winrt::Windows::Foundation::IInspectable const& object);

		/*void TryCreateAnimatedVisual(
			Compositor const& compositor, VisualCollection const& visuals);*/
		void Play();
		float2 GetSize();
		Visual GetVisual();

	private:
		ScalarKeyFrameAnimation progressAnimation{ nullptr };
		Compositor mCompositor{ nullptr };
		void* mpVisual; //temp hack
	};
}